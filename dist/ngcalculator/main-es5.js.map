{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calculator/calculator.component.ts","webpack:///src/app/calculator/calculator.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CalculatorComponent","currentNumber","firstOperand","operator","waitForSecondNumber","v","console","log","includes","op","secondOp","Number","result","doCalculation","String","getOperation","getNumber","getDecimal","clear","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngcalculator';\n}\n","<app-calculator></app-calculator>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n  currentNumber = '0';  //currentNumber variable holds the string that will be displayed in the result input element\n  firstOperand = null;  //firstOperand variable holds the value of the first operand of the operation\n  operator = null;      //operator variable holds the operation        \n  waitForSecondNumber = false;  /*waitForSecondNumber variable holds a boolean value indicating if the user has\n                                finished typing the first operand and ready to enter the second operand of the\n                                operation*/  \n\n\n  //getNumber() method that will be used to get the current number\n  public getNumber(v: string){\n    console.log(v);\n    if(this.waitForSecondNumber)\n    {\n      this.currentNumber = v;\n      this.waitForSecondNumber = false;\n    }else{\n      this.currentNumber === '0'? this.currentNumber = v: this.currentNumber += v;\n    \n    }\n  }\n\n  //getDecimal() method which appends the decimal point to the current number\n  getDecimal(){\n    if(!this.currentNumber.includes('.')){\n      this.currentNumber += '.';\n    }\n  }\n\n  //doCalculation() method which performs the calculation depending on the operator type\n  private doCalculation(op , secondOp){\n    switch (op){\n      case '+':\n      return this.firstOperand += secondOp;\n      case '-':\n      return this.firstOperand -= secondOp;\n      case '*':\n      return this.firstOperand *= secondOp;\n      case '/':\n      return this.firstOperand /= secondOp;\n      case '=':\n      return secondOp;\n    }\n  }\n\n  //getOperation() that will be used to get the performed operation\n  public getOperation(op: string){\n    console.log(op);\n    \n    if(this.firstOperand === null){\n      this.firstOperand = Number(this.currentNumber);\n    \n    }else if(this.operator){\n      const result = this.doCalculation(this.operator , Number(this.currentNumber))\n      this.currentNumber = String(result);\n      this.firstOperand = result;\n    }\n    this.operator = op;    \n    this.waitForSecondNumber = true;\n     console.log(this.firstOperand);\n  }\n    \n  //to clear the result area and reset the calculations\n  public clear(){\n    this.currentNumber = '0';\n    this.firstOperand = null;\n    this.operator = null;\n    this.waitForSecondNumber = false;\n  }\n    \n    \n    \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1\n  style=\"\n    text-align: center;\n    font-size: 50px;\n    font-family: 'Courier New', Courier, monospace;\n    color: #b0353a;\n    background: #b0353a;\n    /* height: 100px; */\n    width: 40px;\n    border-radius: 30px;\n    margin-top: 30px;\n    margin-left: 10px;\n  \"\n>\n  <span>B</span>asic <span>C</span>alculator\n</h1>\n<div class=\"calculator\">\n  <input type=\"text\" class=\"calculator-screen\" [value]=\"currentNumber\" />\n  <!--[---]= property binding-->\n\n  <div class=\"calculator-keys\">\n    <button\n      type=\"button\"\n      (click)=\"getOperation('+')\"\n      class=\"operator\"\n      value=\"+\"\n    >\n      +\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('-')\"\n      class=\"operator\"\n      value=\"-\"\n    >\n      -\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('*')\"\n      class=\"operator\"\n      value=\"*\"\n    >\n      &times;\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('*')\"\n      class=\"operator\"\n      value=\"/\"\n    >\n      &divide;\n    </button>\n\n    <button type=\"button\" (click)=\"getNumber('7')\" value=\"7\">7</button>\n    <!--(---)= Event binding-->\n    <button type=\"button\" (click)=\"getNumber('8')\" value=\"8\">8</button>\n    <button type=\"button\" (click)=\"getNumber('9')\" value=\"9\">9</button>\n\n    <button type=\"button\" (click)=\"getNumber('4')\" value=\"4\">4</button>\n    <button type=\"button\" (click)=\"getNumber('5')\" value=\"5\">5</button>\n    <button type=\"button\" (click)=\"getNumber('6')\" value=\"6\">6</button>\n\n    <button type=\"button\" (click)=\"getNumber('1')\" value=\"1\">1</button>\n    <button type=\"button\" (click)=\"getNumber('2')\" value=\"2\">2</button>\n    <button type=\"button\" (click)=\"getNumber('3')\" value=\"3\">3</button>\n\n    <button type=\"button\" (click)=\"getNumber('0')\" value=\"0\">0</button>\n\n    <button type=\"button\" (click)=\"getDecimal()\" class=\"decimal\" value=\".\">\n      .\n    </button>\n    <button type=\"button\" (click)=\"clear()\" class=\"all-clear\" value=\"all-clear\">\n      AC\n    </button>\n\n    <button\n      type=\"button\"\n      (click)=\"getOperation('=')\"\n      class=\"equal-sign\"\n      value=\"=\"\n    >\n      =\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}