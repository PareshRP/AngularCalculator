{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/calculator/calculator.component.ts","./src/app/calculator/calculator.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,cAAc,CAAC;KACxB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,4EAAiC;;6FDOpB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACyB;;AAajE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAHJ;YACP,uEAAa;SACd;mIAIU,SAAS,mBATlB,2DAAY;QACZ,oFAAmB,aAGnB,uEAAa;6FAKJ,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;iBACd;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,mBAAmB;IAyE9B;QAxEA,kBAAa,GAAG,GAAG,CAAC,CAAE,4FAA4F;QAClH,iBAAY,GAAG,IAAI,CAAC,CAAE,6EAA6E;QACnG,aAAQ,GAAG,IAAI,CAAC,CAAM,+CAA+C;QACrE,wBAAmB,GAAG,KAAK,CAAC,CAAE;;iDAEW;IAmEzB,CAAC;IAhEjB,gEAAgE;IACzD,SAAS,CAAC,CAAS;QACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAG,IAAI,CAAC,mBAAmB,EAC3B;YACE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;aAAI;YACH,IAAI,CAAC,aAAa,KAAK,GAAG,EAAC,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,EAAC,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC;SAE7E;IACH,CAAC;IAED,2EAA2E;IAC3E,UAAU;QACR,IAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;YACnC,IAAI,CAAC,aAAa,IAAI,GAAG,CAAC;SAC3B;IACH,CAAC;IAED,sFAAsF;IAC9E,aAAa,CAAC,EAAE,EAAG,QAAQ;QACjC,QAAQ,EAAE,EAAC;YACT,KAAK,GAAG;gBACR,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC;YACrC,KAAK,GAAG;gBACR,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC;YACrC,KAAK,GAAG;gBACR,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC;YACrC,KAAK,GAAG;gBACR,OAAO,IAAI,CAAC,YAAY,IAAI,QAAQ,CAAC;YACrC,KAAK,GAAG;gBACR,OAAO,QAAQ,CAAC;SACjB;IACH,CAAC;IAED,iEAAiE;IAC1D,YAAY,CAAC,EAAU;QAC5B,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEhB,IAAG,IAAI,CAAC,YAAY,KAAK,IAAI,EAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAEhD;aAAK,IAAG,IAAI,CAAC,QAAQ,EAAC;YACrB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC7E,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;SAC5B;QACD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,qDAAqD;IAC9C,KAAK;QACV,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IACnC,CAAC;IAOD,QAAQ;IACR,CAAC;;sFA5EU,mBAAmB;mGAAnB,mBAAmB;QCPhC,wEAcE;QAAA,uEAAM;QAAA,4DAAC;QAAA,4DAAO;QAAA,gEAAK;QAAA,uEAAM;QAAA,4DAAC;QAAA,4DAAO;QAAA,sEACnC;QAAA,4DAAK;QACL,yEACE;QAAA,sEACA;QAEA,yEACE;QAAA,6EAME;QAJA,4IAAS,iBAAa,GAAG,CAAC,IAAC;QAI3B,+DACF;QAAA,4DAAS;QACT,6EAME;QAJA,4IAAS,iBAAa,GAAG,CAAC,IAAC;QAI3B,+DACF;QAAA,4DAAS;QACT,6EAME;QAJA,4IAAS,iBAAa,GAAG,CAAC,IAAC;QAI3B,oEACF;QAAA,4DAAS;QACT,6EAME;QAJA,4IAAS,iBAAa,GAAG,CAAC,IAAC;QAI3B,oEACF;QAAA,4DAAS;QAET,6EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QAEnE,6EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QACnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QAEnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QACnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QACnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QAEnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QACnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QACnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QAEnE,8EAAyD;QAAnC,4IAAS,cAAU,GAAG,CAAC,IAAC;QAAW,6DAAC;QAAA,4DAAS;QAEnE,8EACE;QADoB,4IAAS,gBAAY,IAAC;QAC1C,+DACF;QAAA,4DAAS;QACT,8EACE;QADoB,4IAAS,WAAO,IAAC;QACrC,gEACF;QAAA,4DAAS;QAET,8EAME;QAJA,4IAAS,iBAAa,GAAG,CAAC,IAAC;QAI3B,+DACF;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;;QApEyC,0DAAuB;QAAvB,oFAAuB;;6FDVzD,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngcalculator';\n}\n","<app-calculator></app-calculator>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css']\n})\nexport class CalculatorComponent implements OnInit {\n  currentNumber = '0';  //currentNumber variable holds the string that will be displayed in the result input element\n  firstOperand = null;  //firstOperand variable holds the value of the first operand of the operation\n  operator = null;      //operator variable holds the operation        \n  waitForSecondNumber = false;  /*waitForSecondNumber variable holds a boolean value indicating if the user has\n                                finished typing the first operand and ready to enter the second operand of the\n                                operation*/  \n\n\n  //getNumber() method that will be used to get the current number\n  public getNumber(v: string){\n    console.log(v);\n    if(this.waitForSecondNumber)\n    {\n      this.currentNumber = v;\n      this.waitForSecondNumber = false;\n    }else{\n      this.currentNumber === '0'? this.currentNumber = v: this.currentNumber += v;\n    \n    }\n  }\n\n  //getDecimal() method which appends the decimal point to the current number\n  getDecimal(){\n    if(!this.currentNumber.includes('.')){\n      this.currentNumber += '.';\n    }\n  }\n\n  //doCalculation() method which performs the calculation depending on the operator type\n  private doCalculation(op , secondOp){\n    switch (op){\n      case '+':\n      return this.firstOperand += secondOp;\n      case '-':\n      return this.firstOperand -= secondOp;\n      case '*':\n      return this.firstOperand *= secondOp;\n      case '/':\n      return this.firstOperand /= secondOp;\n      case '=':\n      return secondOp;\n    }\n  }\n\n  //getOperation() that will be used to get the performed operation\n  public getOperation(op: string){\n    console.log(op);\n    \n    if(this.firstOperand === null){\n      this.firstOperand = Number(this.currentNumber);\n    \n    }else if(this.operator){\n      const result = this.doCalculation(this.operator , Number(this.currentNumber))\n      this.currentNumber = String(result);\n      this.firstOperand = result;\n    }\n    this.operator = op;    \n    this.waitForSecondNumber = true;\n     console.log(this.firstOperand);\n  }\n    \n  //to clear the result area and reset the calculations\n  public clear(){\n    this.currentNumber = '0';\n    this.firstOperand = null;\n    this.operator = null;\n    this.waitForSecondNumber = false;\n  }\n    \n    \n    \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1\n  style=\"\n    text-align: center;\n    font-size: 50px;\n    font-family: 'Courier New', Courier, monospace;\n    color: #b0353a;\n    background: #b0353a;\n    /* height: 100px; */\n    width: 40px;\n    border-radius: 30px;\n    margin-top: 30px;\n    margin-left: 10px;\n  \"\n>\n  <span>B</span>asic <span>C</span>alculator\n</h1>\n<div class=\"calculator\">\n  <input type=\"text\" class=\"calculator-screen\" [value]=\"currentNumber\" />\n  <!--[---]= property binding-->\n\n  <div class=\"calculator-keys\">\n    <button\n      type=\"button\"\n      (click)=\"getOperation('+')\"\n      class=\"operator\"\n      value=\"+\"\n    >\n      +\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('-')\"\n      class=\"operator\"\n      value=\"-\"\n    >\n      -\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('*')\"\n      class=\"operator\"\n      value=\"*\"\n    >\n      &times;\n    </button>\n    <button\n      type=\"button\"\n      (click)=\"getOperation('*')\"\n      class=\"operator\"\n      value=\"/\"\n    >\n      &divide;\n    </button>\n\n    <button type=\"button\" (click)=\"getNumber('7')\" value=\"7\">7</button>\n    <!--(---)= Event binding-->\n    <button type=\"button\" (click)=\"getNumber('8')\" value=\"8\">8</button>\n    <button type=\"button\" (click)=\"getNumber('9')\" value=\"9\">9</button>\n\n    <button type=\"button\" (click)=\"getNumber('4')\" value=\"4\">4</button>\n    <button type=\"button\" (click)=\"getNumber('5')\" value=\"5\">5</button>\n    <button type=\"button\" (click)=\"getNumber('6')\" value=\"6\">6</button>\n\n    <button type=\"button\" (click)=\"getNumber('1')\" value=\"1\">1</button>\n    <button type=\"button\" (click)=\"getNumber('2')\" value=\"2\">2</button>\n    <button type=\"button\" (click)=\"getNumber('3')\" value=\"3\">3</button>\n\n    <button type=\"button\" (click)=\"getNumber('0')\" value=\"0\">0</button>\n\n    <button type=\"button\" (click)=\"getDecimal()\" class=\"decimal\" value=\".\">\n      .\n    </button>\n    <button type=\"button\" (click)=\"clear()\" class=\"all-clear\" value=\"all-clear\">\n      AC\n    </button>\n\n    <button\n      type=\"button\"\n      (click)=\"getOperation('=')\"\n      class=\"equal-sign\"\n      value=\"=\"\n    >\n      =\n    </button>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}